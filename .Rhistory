mich.listw <- nb2listw(mich.nb)
michigan_map <- map("county", 'michigan',plot=FALSE, fill = TRUE)
#michigan_map$names<-michigan_map$names[-42]
IDs<-michigan_map$names
michigan_sp <- map2SpatialPolygons(michigan_map, IDs = IDs,
proj4string = CRS("+proj=longlat +ellps=WGS84"))
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$graduation_rt
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$graduation_rt,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[60%, 81)","[81, 84)","[84, 87)","[87, 89)","[89, 98%]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
title(main="Michigan High School\n Graduation Rates")
mich.nb <- poly2nb(michigan_sp)
mich.coord <- coordinates(michigan_sp)
## Here we get the adjacency weights, together with the information on the number of weights for each county
mich.weights <- nb2WB(mich.nb)
adj.mich <- mich.weights$adj
weights.mich <- mich.weights$weights
num.mich <- mich.weights$num
mich.listw <- nb2listw(mich.nb)
fit<-lm(graduation_rt~percent_male+percent_female+percent_econ_disadvan+percent_hispanic+percent_white+percent_black+percent_asian,data=mich_grad_dat)
step(fit)
step(fit)
fit<-lm(graduation_rt~percent_male+percent_female+percent_econ_disadvan+percent_hispanic+percent_white+percent_black+percent_asian,data=mich_grad_dat)
#This gives us percent_econ_disadvan and percent_black as the best covariates
step(fit)
#center the variables so that the intercept is the mean graduation rt
per_econ_dis<-mich_grad_dat$percent_econ_disadvan-mean(mich_grad_dat$percent_econ_disadvan)
per_black<-mich_grad_dat$percent_black-mean(mich_grad_dat$percent_black)
fit<-lm(mich_grad_dat$graduation_rt~per_econ_dis+per_black)
fit<-lm(graduation_rt~percent_male+percent_female+percent_econ_disadvan+percent_hispanic+percent_white+percent_black+percent_asian,data=mich_grad_dat)
#This gives us percent_econ_disadvan and percent_black as the best covariates
step(fit)
#center the variables so that the intercept is the mean graduation rt
per_econ_dis_cent<-mich_grad_dat$percent_econ_disadvan-mean(mich_grad_dat$percent_econ_disadvan)
per_black_cent<-mich_grad_dat$percent_black-mean(mich_grad_dat$percent_black)
fit<-lm(mich_grad_dat$graduation_rt~per_econ_dis_cent+per_black_cent)
moran.test(fit$residuals, mich.listw, rank=TRUE)
moran.test(fit$residuals, mich.listw, rank=TRUE)
mich_grad_dat$percent_black
############################################
#Create a map of % black per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_black
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_black,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
############################################
#Create a map of % black per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_black
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_black,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[0.0%, 0.2)","[0.2, 2.8)","[2.8, 4.4)","[4.4, 9.1)","[9.1, 12.5%]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
title(main="Michigan High School\n Percent Black")
############################################
#Create a map of % economically disadvantaged per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_black
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_econ_disadvan,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
############################################
#Create a map of % economically disadvantaged per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_black
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_econ_disadvan,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[0.0%, 0.2)","[0.2, 2.8)","[2.8, 4.4)","[4.4, 9.1)","[9.1, 12.5%]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
title(main="Michigan High School\n Percent Economically Disadvantaged")
############################################
#Create a map of % economically disadvantaged per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_econ_disadvan
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_econ_disadvan,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[0.0%, 0.2)","[0.2, 2.8)","[2.8, 4.4)","[4.4, 9.1)","[9.1, 12.5%]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
title(main="Michigan High School\n Percent Economically Disadvantaged")
############################################
#Create a map of % economically disadvantaged per county.
###########################################
plot(michigan_sp,col="white",axes=T)
plotvar <- mich_grad_dat$percent_econ_disadvan
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(mich_grad_dat$percent_econ_disadvan,  probs = c(0,20,40,60,80,100)/100))
class
### To see which are the class breaks (we will need this to make the legend)
colcode <- findColours(class,plotclr)
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[19.8%, 34.6)","[34.6, 41.4)","[41.4, 46.2)","[46.2, 50.9)","[50.9, 100%]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
title(main="Michigan High School\n Percent Economically Disadvantaged")
num.mich
##############################################
#Here, we fit the Bayesian hierarchical spatial
#linear model with an improper CAR prior
##############################################
### Now we fill the adjacency matrix W using the following trick
W <- matrix(0,nrow(mich_grad_dat),nrow(mich_grad_dat))
rep.mich <- rep(1:nrow(mich_grad_dat),num.mich)
for(i in 1:nrow(mich_grad_dat)){
W[i,adj.mich[rep.mich==i]] <- rep(1,num.mich[i])
}
dim(W)
formula <- mich_grad_dat$graduation_rt~per_econ_dis_cent+per_black_cent
formula <- mich_grad_dat$graduation_rt~per_econ_dis_cent+per_black_cent
model.car <- S.CARleroux(formula=formula,
W=W,
family="gaussian",
fix.rho=TRUE,
rho=1,
burnin=10000,
n.sample=40000,
thin=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
prior.tau2=NULL,
verbose=TRUE)
samples.eta <- model.car$samples$phi
model.car$summary.results
2*pnorm(abs(model.car$summary.results[,7]), mean = 0, sd = 1, lower.tail = FALSE)
plot(model.car$samples$beta,main="Beta Coefficients")
model.car$summary.results[,-c(4,5)]
formula <- mich_grad_dat$graduation_rt~per_econ_dis_cent+per_black_cent
model.car <- S.CARleroux(formula=formula,
W=W,
family="gaussian",
fix.rho=TRUE,
rho=1,
burnin=10000,
n.sample=60000,
thin=1,
prior.mean.beta=NULL,
prior.var.beta=NULL,
prior.nu2=NULL,
prior.tau2=NULL,
verbose=TRUE)
samples.eta <- model.car$samples$phi
model.car$summary.results
plot(model.car$samples$beta,main="Beta Coefficients")
plot(model.car$samples$beta[,1],main="Beta Coefficients")
plot(model.car$samples$beta,main="Beta Coefficients")
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(US_poly_sp,border="black",axes=F)
title(main="Median of Spatial Random Effects")
plot(US_poly_sp,col=colcode,add=T)
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(mich_sp,border="black",axes=F)
title(main="Median of Spatial Random Effects")
plot(mich_sp,col=colcode,add=T)
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
#Posterior median of spatial effects
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
#Posterior median of spatial effects
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[-0.02, -0.003)","[-0.003, 0.0007)","[0.0007, 0.004)","[0.004, 0.01)","[0.01, 2.07]")
legend("bottomright",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
#Posterior median of spatial effects
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Oranges")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[-0.02, -0.003)","[-0.003, 0.0007)","[0.0007, 0.004)","[0.004, 0.01)","[0.01, 2.07]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
##############################################
#Here, we fit the Bayesian hierarchical spatial
#linear model with an improper CAR prior
##############################################
###Posterior SD of spatial effects
post.sd.eta <- as.numeric(apply(samples.eta,2,sd))
plotvar <- post.sd.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.sd.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
###Posterior SD of spatial effects
post.sd.eta <- as.numeric(apply(samples.eta,2,sd))
plotvar <- post.sd.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.sd.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
###Posterior SD of spatial effects
post.sd.eta <- as.numeric(apply(samples.eta,2,sd))
plotvar <- post.sd.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.sd.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[0.32, 0.37)","[0.37, 0.43)","[0.43, 0.54)","[0.54, 1.00)","[1.00, 1.63]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
##############################################
#Posterior median of spatial effects
post.median.eta <- as.numeric(apply(samples.eta,2,median))
plotvar <- post.median.eta
nclr <- 5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.eta,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[-0.02, -0.003)","[-0.003, 0.0007)","[0.0007, 0.004)","[0.004, 0.01)","[0.01, 2.07]")
legend("bottomleft",legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
dim(samples.eta[2])
dim(samples.eta)
#Get credible intervals for each state
lower<-c()
upper<-c()
for(i in 1:dim(samples.eta)[2]){
lower<-append(lower,quantile(samples.eta[,i],  probs = c(.025,.975))[1])
upper<-append(upper,quantile(samples.eta[,i],  probs = c(.025,.975))[2])
}
lower
upper
dim(samples.eta)
cbind(lower,upper)
cbind(lower,upper)
mich.proper.car <- nb2listw(mich.nb,style="B")
##############################################
##Here, we fit the Bayesian hierarchical spatial
#linear model with a PROPER CAR model
##############################################
mich.w.proper.car <- nb2listw(mich.nb,style="B")
model.proper.car <- spautolm(formula=formula,
listw=mich.w.proper.car,
family="CAR")
summary(model.proper.car)
summary(model.proper.car)
stargazer(model.proper.car)
model.sar <- spautolm(formula=formula,listw=mich.listw,family="SAR")
summary(model.sar)
head(mich_grad_dat)
num_graduating<-mich_grad_dat$num_graduating
num_cohort<-mich_grad_dat$cohort_count
num_graduating
formula
### Here, since we assume that the log relative risk depends on the percentage of population
### involved in Agriculture, Fisheries and Forestries, we have:
num_graduating<-mich_grad_dat$num_graduating
num_cohort<-mich_grad_dat$cohort_count
formula2 <- num_graduating~per_econ_dis_cent + per_black_cent + offset(log(num_cohort))
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=1000, n.sample=30000)
num_cohort
typeof(num_cohort)
typeof(per_econ_dis_cent)
typeof(per_black_cent)
typeof(num_graduating)
formula2 <- num_graduating~per_econ_dis_cent + per_black_cent + offset(log(num_cohort))
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=1000, n.sample=30000)
num_graduating
typeof(num_graduating)
W
formula2
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=1000, n.sample=30000)
num_graduating<-as.integer(mich_grad_dat$num_graduating)
num_cohort<-mich_grad_dat$cohort_count
formula2 <- num_graduating~per_econ_dis_cent + per_black_cent + offset(log(num_cohort))
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=1000, n.sample=30000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=10000, n.sample=30000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=10000, n.sample=60000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=30000, n.sample=80000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=30000, n.sample=100000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=30000, n.sample=120000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=30000, n.sample=150000)
model.poi$summary.results
model.poi <- S.CARbym(formula=formula2, family="poisson", W=W, burnin=30000, n.sample=170000)
model.poi$summary.results
plot(model.poi$samples$beta)
RR.covariate <- model.poi$samples$beta%*%t(matrix(cbind(rep(1,nrow(mich_grad_dat)),per_econ_dis_cent,per_black_cent),nrow(mich_grad_dat),3))
RR.random <- model.poi$samples$psi
#+model.scotland$residuals[,3]
RR.all <- exp(RR.covariate+RR.random)
post.median.RR <- apply(RR.all,2,median)
plotvar <- post.median.RR
nclr<-5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.RR,  probs = c(0,20,40,60,80,100)/100))
colcode <- findColours(class,plotclr)
plot(mich_sp,border="black",axes=F)
title(main="Estimated Propensity to Vote Republican 2012")
plot(mich_sp,col=colcode,add=T)
mich_sp
nclr<-5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.RR,  probs = c(0,20,40,60,80,100)/100))
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Estimated Propensity to Vote Republican 2012")
plot(michigan_sp,col=colcode,add=T)
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.RR,  probs = c(0,20,40,60,80,100)/100))
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Estimated Propensity to Graduate High School")
plot(michigan_sp,col=colcode,add=T)
class
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.RR,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Estimated Propensity to Graduate High School")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[0.74, 0.83)","[0.83, 0.85)","[0.85, 0.87)","[0.87, 0.88)","[0.88, 0.91]")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
post.median.psi <- as.numeric(apply(model.poi$samples$psi,2,median))
plotvar <- post.median.psi
nclr<-5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.psi,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Posterior Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
post.median.psi <- as.numeric(apply(model.poi$samples$psi,2,median))
plotvar <- post.median.psi
nclr<-5
plotclr <- brewer.pal(nclr,"Reds")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=quantile(post.median.psi,  probs = c(0,20,40,60,80,100)/100))
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Posterior Median of Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("[-0.70, -0.02)","[-0.02, -0.001)","[-0.001, 0.01)","[0.01, 0.02)","[0.02, 0.05]")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
#the lower bound of their 95% CI
post.lower.psi <- as.numeric(apply(model.poi$samples$psi,2,quantile,probs=c(2.5)/100))
#the upper bound of their 95% CI
post.upper.psi <- as.numeric(apply(model.poi$samples$psi,2,quantile,probs=c(97.5)/100))
# counties with significantly positive spatial random effects
nrow(election_dat[(post.lower.psi>0),])
# counties with significantly negative spatial random effects
nrow(election_dat[post.upper.psi<0,])
# counties with significantly positive spatial random effects
nrow(mich_grad_dat[(post.lower.psi>0),])
nrow(mich_grad_dat[post.upper.psi<0,])
mich_grad_dat[post.upper.psi<0,]
nrow(mich_grad_dat[(post.lower.psi>0),])
post.lower.psi
post.upper.psi
plotvar<-c()
for(i in 1:nrow(mich_grad_dat)){
#sig. positive spatial random effects
if(post.lower.psi[i]>0){
plotvar<-append(plotvar,post.lower.psi[i])
}
#sig. negative spatial random effects
else if(post.upper.psi[i]<0){
plotvar<-append(plotvar,post.lower.psi[i])
}
else{
plotvar<-append(plotvar,0)
#print(as.character(election_dat$State[i]))
}
}
plotvar
nclr<-3
plotclr <- c("blue",'gray80',"red")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=c(min(plotvar), -.00001,.00001, max(plotvar)), intervalClosure='left')
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
class
nclr<-2
plotclr <- c("blue","red")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=c(min(plotvar), 0, max(plotvar)), intervalClosure='left')
class
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("Sig. Negative","Not Significant","Sig. Positive")
legend('bottomright',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=F)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("Sig. Negative","Not Significant","Sig. Positive")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("Sig. Negative","Not Significant","Sig. Positive")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
plotclr <- c("blue","grey80")
class <- classIntervals(plotvar,nclr,style="fixed",fixedBreaks=c(min(plotvar), 0, max(plotvar)), intervalClosure='left')
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("Sig. Negative","Not Significant","Sig. Positive")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
colcode <- findColours(class,plotclr)
plot(michigan_sp,border="black",axes=T)
title(main="Spatial Random Effects")
plot(michigan_sp,col=colcode,add=T)
leg.txt<-c("Sig. Negative","Not Significant")
legend('bottomleft',legend=leg.txt,fill=plotclr,cex=1,ncol=1,bty="n")
names(model.car)
model.car$fitted.values
seq(1:1)
